// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Base struct {
	ID    string  `json:"id"`
	Name  string  `json:"name"`
	Price float64 `json:"price"`
}

func (Base) IsEntity() {}

type Customer struct {
	ID       string `json:"id"`
	Email    string `json:"email"`
	Username string `json:"username"`
	Password string `json:"password"`
}

type DeliveryStaff struct {
	ID    string `json:"id"`
	Name  string `json:"name"`
	Email string `json:"email"`
}

type Mutation struct {
}

type Order struct {
	ID            string         `json:"id"`
	DeliveryStaff *DeliveryStaff `json:"deliveryStaff,omitempty"`
	Customer      *Customer      `json:"customer"`
	Pizzas        []*Pizza       `json:"pizzas"`
	TotalPrice    float64        `json:"totalPrice"`
	Status        string         `json:"Status"`
	CreatedAt     string         `json:"createdAt"`
	UpdatedAt     string         `json:"updatedAt"`
}

type Pizza struct {
	ID        string     `json:"id"`
	OrderID   string     `json:"orderId"`
	Base      *Base      `json:"base"`
	Size      *Size      `json:"size"`
	Toppings  []*Topping `json:"toppings"`
	Price     float64    `json:"Price"`
	CreatedAt string     `json:"createdAt"`
	UpdatedAt string     `json:"updatedAt"`
}

type Query struct {
}

type Size struct {
	ID         string  `json:"id"`
	Name       string  `json:"name"`
	Multiplier float64 `json:"multiplier"`
}

func (Size) IsEntity() {}

type Topping struct {
	ID    string  `json:"id"`
	Name  string  `json:"name"`
	Price float64 `json:"price"`
}

func (Topping) IsEntity() {}
