package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"Menu_Service/graph/model"
	"context"
)

// AvailablePizzaSelection is the resolver for the AvailablePizzaSelection field.
func (r *queryResolver) AvailablePizzaSelection(ctx context.Context) (*model.AvailablePizzaSelection, error) {
	// Get the available pizza selections
	var bases []*model.Base
	var sizes []*model.Size
	var toppings []*model.Topping

	err := r.DB.Find(&bases).Error
	if err != nil {
		return nil, err
	}

	err = r.DB.Find(&sizes).Error
	if err != nil {
		return nil, err
	}

	err = r.DB.Find(&toppings).Error
	if err != nil {
		return nil, err
	}

	availablePizzaSelections := &model.AvailablePizzaSelection{
		Bases:    bases,
		Sizes:    sizes,
		Toppings: toppings,
	}

	return availablePizzaSelections, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
